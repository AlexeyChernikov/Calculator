<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Calculator.Styles">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Base button style-->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="0.5"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Memory button style-->
    <Style x:Key="MemoryButton" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--Number button style-->
    <Style x:Key="NumberButton" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource NumberButton.Static.Background}"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/> 
    </Style>
    
    <!--#region Operations-->
    <!--Base operation button style-->
    <Style x:Key="OperationButton" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource OperationButton.Static.Background}"/>
    </Style>

    <!--Arithmetic operation button style (+, -, *, /)-->
    <Style x:Key="ArithmeticOperationButton" BasedOn="{StaticResource OperationButton}" TargetType="Button">
        <Setter Property="FontFamily" Value="Microsoft YaHei Light"/>
        <Setter Property="FontSize" Value="27"/>
    </Style>
    
    <!--Additional operation button style (%, CE, C, ⌫, ...)-->
    <Style x:Key="AdditionalOperationButton" BasedOn="{StaticResource OperationButton}" TargetType="Button">
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    
    <!--Result button style-->
    <Style x:Key="ResultButton" BasedOn="{StaticResource ArithmeticOperationButton}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ResultButton.Static.Background}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ResultButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ResultButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ResultButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ResultButton.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Operations-->
</ResourceDictionary>